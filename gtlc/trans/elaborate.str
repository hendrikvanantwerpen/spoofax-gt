module elaborate

imports
  signatures/-
  analysis
  statixruntime
  pp
  desugar

rules

//  menu-analyzed-elaborate:
//      (analyzed-ast, _, _, path, project-path) -> (filename, elaborated-ast)
//    with
//      filename := <guarantee-extension(|"elaborated.aterm")> path
//    ; elaborated-ast := <elaborate> analyzed-ast
//
//  menu-analyzed-elaborate-pp:
//      (analyzed-ast, _, _, path, project-path) -> (filename, pretty-printed)
//    with
//      filename := <guarantee-extension(|"elaborated.glc")> path
//    ; elaborated-ast := <elaborate> analyzed-ast
//    ; pretty-printed := <pp-gtlc-string> Elaborate(analyzed-ast, elaborated-ast)

  menu-source-elaborate:
      (source-ast, _, _, path, project-path) -> (filename, elaborated-ast)
    with
      filename := <guarantee-extension(|"elaborated.aterm")> path
    ; debug(!"a: ")
    ; desugared-ast := <desugar-all; stx-index-ast(|path)> source-ast
    ; debug(!"b: ")
    ; analyzed-ast := <stx-evaluate(|"static-semantics", "insertCasts")> [desugared-ast]
    ; debug(!"c: ")
    ; elaborated-ast := <elaborate> analyzed-ast
    ; debug(!"d: ")

  elaborate = id 
 
  menu-source-elaborate-pp:
      (source-ast, _, _, path, project-path) -> (filename, pretty-printed)
    with
      filename := <guarantee-extension(|"elaborated.glc")> path
    ; desugared-ast := <desugar-all; stx-index-ast(|path)> source-ast
    ; analyzed-ast := <stx-evaluate(|"static-semantics", "insertCasts")> [desugared-ast]
    ; elaborated-ast := <elaborate> analyzed-ast
    ; pretty-printed := <pp-gtlc-string> elaborated-ast
 